{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","index","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","filteredRobots","filter","robot","toLowerCase","includes","length","fetch","response","json","users","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mDCSCQ,EAbF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACA,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAA1B,eACtB,gCACI,6BAAKF,IACL,4BAAIC,WCWDK,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BACKA,EAAOC,KAAI,SAACC,EAAKC,GACtB,OAAQ,cAAC,EAAD,CACRR,GAAIK,EAAOG,GAAOR,GAClBF,KAAMO,EAAOG,GAAOV,KACpBC,MAAOM,EAAOG,GAAOT,OAHFS,SCSZC,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEhB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCPI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SAA2EJ,EAAMK,aCiB1EC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKX,MAAMK,a,GAjBCQ,aCmDZC,E,kDA7CX,aAAc,IAAD,8BACT,gBAMJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SANzC,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAY,IAJP,E,0CAYb,WACI,MAAgCN,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YACVG,EAAiB9B,EAAO+B,QAAO,SAAAC,GAAS,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASP,EAAYM,kBACnG,OAAIjC,EAAOmC,OAKH,sBAAKvC,UAAW,KAAhB,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQ8B,WAT3B,8C,+BAmBf,WACC,IAAD,OAEIM,MAAM,8CACLlD,MAAK,SAAAmD,GAAQ,OAAKA,EAASC,UAC3BpD,MAAK,SAAAqD,GAAU,EAAKjB,SAAS,CAACtB,OAAQuC,W,GAzC7BC,IAAMjB,W,MCMxBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAIJC,SAASC,eAAe,SAO1B9D,M","file":"static/js/main.fe736bd5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return(\r\n    <div className = \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\" >\r\n        <img alt= 'robots' src={`https://robohash.org/${id}}?200x200`} />\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    return (   \r\n        <div>\r\n            {robots.map((user,index) =>{\r\n        return (<Card key={index} \r\n        id={robots[index].id} \r\n        name={robots[index].name} \r\n        email={robots[index].email}\r\n        />) ;\r\n    })}\r\n        </div>   \r\n    );\r\n\r\n    \r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'  \r\n            type='search' \r\n            placeholder='Search Robots'\r\n            onChange={searchChange}\r\n            ></input>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'1px solid black',height:'500px'}}>{props.children}</div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Scroll;","import React ,{ Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError :true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooops.That is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends React.Component  {\r\n    constructor(){\r\n        super();\r\n        this.state = { \r\n            robots: [],\r\n            searchfield:''}\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{return robot.name.toLowerCase().includes(searchfield.toLowerCase()) } )\r\n        if(!robots.length){\r\n            return <h1>Loading...</h1>\r\n        }\r\n        else {\r\n            return (\r\n                <div className ='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n\r\n                </div>            \r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        /*https://jsonplaceholder.typicode.com/users*/\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>  response.json())\r\n        .then(users => {this.setState({robots: users});})\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\nimport './index.css';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App/>\n    </div>\n   \n  </React.StrictMode> ,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}